/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SdWebUiApi.Client.OpenAPIDateConverter;

namespace SdWebUiApi.Model
{
    /// <summary>
    /// BodyDetectControlnetDetectPost
    /// </summary>
    [DataContract(Name = "Body_detect_controlnet_detect_post")]
    public partial class BodyDetectControlnetDetectPost : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BodyDetectControlnetDetectPost" /> class.
        /// </summary>
        /// <param name="controlnetModule">controlnetModule (default to &quot;none&quot;).</param>
        /// <param name="controlnetInputImages">controlnetInputImages.</param>
        /// <param name="controlnetProcessorRes">controlnetProcessorRes (default to 512).</param>
        /// <param name="controlnetThresholdA">controlnetThresholdA (default to 64M).</param>
        /// <param name="controlnetThresholdB">controlnetThresholdB (default to 64M).</param>
        public BodyDetectControlnetDetectPost(string controlnetModule = @"none", List<string> controlnetInputImages = default(List<string>), int controlnetProcessorRes = 512, decimal controlnetThresholdA = 64M, decimal controlnetThresholdB = 64M)
        {
            // use default value if no "controlnetModule" provided
            this.ControlnetModule = controlnetModule ?? @"none";
            this.ControlnetInputImages = controlnetInputImages;
            this.ControlnetProcessorRes = controlnetProcessorRes;
            this.ControlnetThresholdA = controlnetThresholdA;
            this.ControlnetThresholdB = controlnetThresholdB;
        }

        /// <summary>
        /// Gets or Sets ControlnetModule
        /// </summary>
        [DataMember(Name = "controlnet_module", EmitDefaultValue = false)]
        public string ControlnetModule { get; set; }

        /// <summary>
        /// Gets or Sets ControlnetInputImages
        /// </summary>
        [DataMember(Name = "controlnet_input_images", EmitDefaultValue = false)]
        public List<string> ControlnetInputImages { get; set; }

        /// <summary>
        /// Gets or Sets ControlnetProcessorRes
        /// </summary>
        [DataMember(Name = "controlnet_processor_res", EmitDefaultValue = false)]
        public int ControlnetProcessorRes { get; set; }

        /// <summary>
        /// Gets or Sets ControlnetThresholdA
        /// </summary>
        [DataMember(Name = "controlnet_threshold_a", EmitDefaultValue = false)]
        public decimal ControlnetThresholdA { get; set; }

        /// <summary>
        /// Gets or Sets ControlnetThresholdB
        /// </summary>
        [DataMember(Name = "controlnet_threshold_b", EmitDefaultValue = false)]
        public decimal ControlnetThresholdB { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BodyDetectControlnetDetectPost {\n");
            sb.Append("  ControlnetModule: ").Append(ControlnetModule).Append("\n");
            sb.Append("  ControlnetInputImages: ").Append(ControlnetInputImages).Append("\n");
            sb.Append("  ControlnetProcessorRes: ").Append(ControlnetProcessorRes).Append("\n");
            sb.Append("  ControlnetThresholdA: ").Append(ControlnetThresholdA).Append("\n");
            sb.Append("  ControlnetThresholdB: ").Append(ControlnetThresholdB).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
