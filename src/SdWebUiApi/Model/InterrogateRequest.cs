/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SdWebUiApi.Client.OpenAPIDateConverter;

namespace SdWebUiApi.Model
{
    /// <summary>
    /// InterrogateRequest
    /// </summary>
    [DataContract(Name = "InterrogateRequest")]
    public partial class InterrogateRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InterrogateRequest" /> class.
        /// </summary>
        /// <param name="image">Image to work on, must be a Base64 string containing the image&#39;s data. (default to &quot;&quot;).</param>
        /// <param name="model">The interrogate model used. (default to &quot;clip&quot;).</param>
        public InterrogateRequest(string image = @"", string model = @"clip")
        {
            // use default value if no "image" provided
            this.Image = image ?? @"";
            // use default value if no "model" provided
            this.Model = model ?? @"clip";
        }

        /// <summary>
        /// Image to work on, must be a Base64 string containing the image&#39;s data.
        /// </summary>
        /// <value>Image to work on, must be a Base64 string containing the image&#39;s data.</value>
        [DataMember(Name = "image", EmitDefaultValue = false)]
        public string Image { get; set; }

        /// <summary>
        /// The interrogate model used.
        /// </summary>
        /// <value>The interrogate model used.</value>
        [DataMember(Name = "model", EmitDefaultValue = false)]
        public string Model { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InterrogateRequest {\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
