/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SdWebUiApi.Client.OpenAPIDateConverter;

namespace SdWebUiApi.Model
{
    /// <summary>
    /// ScriptsList
    /// </summary>
    [DataContract(Name = "ScriptsList")]
    public partial class ScriptsList : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScriptsList" /> class.
        /// </summary>
        /// <param name="txt2img">Titles of scripts (txt2img).</param>
        /// <param name="img2img">Titles of scripts (img2img).</param>
        public ScriptsList(List<Object> txt2img = default(List<Object>), List<Object> img2img = default(List<Object>))
        {
            this.Txt2img = txt2img;
            this.Img2img = img2img;
        }

        /// <summary>
        /// Titles of scripts (txt2img)
        /// </summary>
        /// <value>Titles of scripts (txt2img)</value>
        [DataMember(Name = "txt2img", EmitDefaultValue = false)]
        public List<Object> Txt2img { get; set; }

        /// <summary>
        /// Titles of scripts (img2img)
        /// </summary>
        /// <value>Titles of scripts (img2img)</value>
        [DataMember(Name = "img2img", EmitDefaultValue = false)]
        public List<Object> Img2img { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ScriptsList {\n");
            sb.Append("  Txt2img: ").Append(Txt2img).Append("\n");
            sb.Append("  Img2img: ").Append(Img2img).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
