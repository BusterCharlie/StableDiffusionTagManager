/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SdWebUiApi.Client.OpenAPIDateConverter;

namespace SdWebUiApi.Model
{
    /// <summary>
    /// StableDiffusionProcessingTxt2Img
    /// </summary>
    [DataContract(Name = "StableDiffusionProcessingTxt2Img")]
    public partial class StableDiffusionProcessingTxt2Img : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StableDiffusionProcessingTxt2Img" /> class.
        /// </summary>
        /// <param name="prompt">prompt (default to &quot;&quot;).</param>
        /// <param name="negativePrompt">negativePrompt (default to &quot;&quot;).</param>
        /// <param name="styles">styles.</param>
        /// <param name="seed">seed (default to -1).</param>
        /// <param name="subseed">subseed (default to -1).</param>
        /// <param name="subseedStrength">subseedStrength (default to 0M).</param>
        /// <param name="seedResizeFromH">seedResizeFromH (default to -1).</param>
        /// <param name="seedResizeFromW">seedResizeFromW (default to -1).</param>
        /// <param name="samplerName">samplerName.</param>
        /// <param name="batchSize">batchSize (default to 1).</param>
        /// <param name="nIter">nIter (default to 1).</param>
        /// <param name="steps">steps (default to 50).</param>
        /// <param name="cfgScale">cfgScale (default to 7.0M).</param>
        /// <param name="width">width (default to 512).</param>
        /// <param name="height">height (default to 512).</param>
        /// <param name="restoreFaces">restoreFaces.</param>
        /// <param name="tiling">tiling.</param>
        /// <param name="doNotSaveSamples">doNotSaveSamples (default to false).</param>
        /// <param name="doNotSaveGrid">doNotSaveGrid (default to false).</param>
        /// <param name="eta">eta.</param>
        /// <param name="denoisingStrength">denoisingStrength (default to 0M).</param>
        /// <param name="sMinUncond">sMinUncond.</param>
        /// <param name="sChurn">sChurn.</param>
        /// <param name="sTmax">sTmax.</param>
        /// <param name="sTmin">sTmin.</param>
        /// <param name="sNoise">sNoise.</param>
        /// <param name="overrideSettings">overrideSettings.</param>
        /// <param name="overrideSettingsRestoreAfterwards">overrideSettingsRestoreAfterwards (default to true).</param>
        /// <param name="refinerCheckpoint">refinerCheckpoint.</param>
        /// <param name="refinerSwitchAt">refinerSwitchAt.</param>
        /// <param name="disableExtraNetworks">disableExtraNetworks (default to false).</param>
        /// <param name="comments">comments.</param>
        /// <param name="enableHr">enableHr (default to false).</param>
        /// <param name="firstphaseWidth">firstphaseWidth (default to 0).</param>
        /// <param name="firstphaseHeight">firstphaseHeight (default to 0).</param>
        /// <param name="hrScale">hrScale (default to 2.0M).</param>
        /// <param name="hrUpscaler">hrUpscaler.</param>
        /// <param name="hrSecondPassSteps">hrSecondPassSteps (default to 0).</param>
        /// <param name="hrResizeX">hrResizeX (default to 0).</param>
        /// <param name="hrResizeY">hrResizeY (default to 0).</param>
        /// <param name="hrCheckpointName">hrCheckpointName.</param>
        /// <param name="hrSamplerName">hrSamplerName.</param>
        /// <param name="hrPrompt">hrPrompt (default to &quot;&quot;).</param>
        /// <param name="hrNegativePrompt">hrNegativePrompt (default to &quot;&quot;).</param>
        /// <param name="samplerIndex">samplerIndex (default to &quot;Euler&quot;).</param>
        /// <param name="scriptName">scriptName.</param>
        /// <param name="scriptArgs">scriptArgs.</param>
        /// <param name="sendImages">sendImages (default to true).</param>
        /// <param name="saveImages">saveImages (default to false).</param>
        /// <param name="alwaysonScripts">alwaysonScripts.</param>
        public StableDiffusionProcessingTxt2Img(string prompt = @"", string negativePrompt = @"", List<string> styles = default(List<string>), int seed = -1, int subseed = -1, decimal subseedStrength = 0M, int seedResizeFromH = -1, int seedResizeFromW = -1, string samplerName = default(string), int batchSize = 1, int nIter = 1, int steps = 50, decimal cfgScale = 7.0M, int width = 512, int height = 512, bool restoreFaces = default(bool), bool tiling = default(bool), bool doNotSaveSamples = false, bool doNotSaveGrid = false, decimal eta = default(decimal), decimal denoisingStrength = 0M, decimal sMinUncond = default(decimal), decimal sChurn = default(decimal), decimal sTmax = default(decimal), decimal sTmin = default(decimal), decimal sNoise = default(decimal), Object overrideSettings = default(Object), bool overrideSettingsRestoreAfterwards = true, string refinerCheckpoint = default(string), decimal refinerSwitchAt = default(decimal), bool disableExtraNetworks = false, Object comments = default(Object), bool enableHr = false, int firstphaseWidth = 0, int firstphaseHeight = 0, decimal hrScale = 2.0M, string hrUpscaler = default(string), int hrSecondPassSteps = 0, int hrResizeX = 0, int hrResizeY = 0, string hrCheckpointName = default(string), string hrSamplerName = default(string), string hrPrompt = @"", string hrNegativePrompt = @"", string samplerIndex = @"Euler", string scriptName = default(string), List<Object> scriptArgs = default(List<Object>), bool sendImages = true, bool saveImages = false, Object alwaysonScripts = default(Object))
        {
            // use default value if no "prompt" provided
            this.Prompt = prompt ?? @"";
            // use default value if no "negativePrompt" provided
            this.NegativePrompt = negativePrompt ?? @"";
            this.Styles = styles;
            this.Seed = seed;
            this.Subseed = subseed;
            this.SubseedStrength = subseedStrength;
            this.SeedResizeFromH = seedResizeFromH;
            this.SeedResizeFromW = seedResizeFromW;
            this.SamplerName = samplerName;
            this.BatchSize = batchSize;
            this.NIter = nIter;
            this.Steps = steps;
            this.CfgScale = cfgScale;
            this.Width = width;
            this.Height = height;
            this.RestoreFaces = restoreFaces;
            this.Tiling = tiling;
            this.DoNotSaveSamples = doNotSaveSamples;
            this.DoNotSaveGrid = doNotSaveGrid;
            this.Eta = eta;
            this.DenoisingStrength = denoisingStrength;
            this.SMinUncond = sMinUncond;
            this.SChurn = sChurn;
            this.STmax = sTmax;
            this.STmin = sTmin;
            this.SNoise = sNoise;
            this.OverrideSettings = overrideSettings;
            this.OverrideSettingsRestoreAfterwards = overrideSettingsRestoreAfterwards;
            this.RefinerCheckpoint = refinerCheckpoint;
            this.RefinerSwitchAt = refinerSwitchAt;
            this.DisableExtraNetworks = disableExtraNetworks;
            this.Comments = comments;
            this.EnableHr = enableHr;
            this.FirstphaseWidth = firstphaseWidth;
            this.FirstphaseHeight = firstphaseHeight;
            this.HrScale = hrScale;
            this.HrUpscaler = hrUpscaler;
            this.HrSecondPassSteps = hrSecondPassSteps;
            this.HrResizeX = hrResizeX;
            this.HrResizeY = hrResizeY;
            this.HrCheckpointName = hrCheckpointName;
            this.HrSamplerName = hrSamplerName;
            // use default value if no "hrPrompt" provided
            this.HrPrompt = hrPrompt ?? @"";
            // use default value if no "hrNegativePrompt" provided
            this.HrNegativePrompt = hrNegativePrompt ?? @"";
            // use default value if no "samplerIndex" provided
            this.SamplerIndex = samplerIndex ?? @"Euler";
            this.ScriptName = scriptName;
            this.ScriptArgs = scriptArgs;
            this.SendImages = sendImages;
            this.SaveImages = saveImages;
            this.AlwaysonScripts = alwaysonScripts;
        }

        /// <summary>
        /// Gets or Sets Prompt
        /// </summary>
        [DataMember(Name = "prompt", EmitDefaultValue = false)]
        public string Prompt { get; set; }

        /// <summary>
        /// Gets or Sets NegativePrompt
        /// </summary>
        [DataMember(Name = "negative_prompt", EmitDefaultValue = false)]
        public string NegativePrompt { get; set; }

        /// <summary>
        /// Gets or Sets Styles
        /// </summary>
        [DataMember(Name = "styles", EmitDefaultValue = false)]
        public List<string> Styles { get; set; }

        /// <summary>
        /// Gets or Sets Seed
        /// </summary>
        [DataMember(Name = "seed", EmitDefaultValue = false)]
        public int Seed { get; set; }

        /// <summary>
        /// Gets or Sets Subseed
        /// </summary>
        [DataMember(Name = "subseed", EmitDefaultValue = false)]
        public int Subseed { get; set; }

        /// <summary>
        /// Gets or Sets SubseedStrength
        /// </summary>
        [DataMember(Name = "subseed_strength", EmitDefaultValue = false)]
        public decimal SubseedStrength { get; set; }

        /// <summary>
        /// Gets or Sets SeedResizeFromH
        /// </summary>
        [DataMember(Name = "seed_resize_from_h", EmitDefaultValue = false)]
        public int SeedResizeFromH { get; set; }

        /// <summary>
        /// Gets or Sets SeedResizeFromW
        /// </summary>
        [DataMember(Name = "seed_resize_from_w", EmitDefaultValue = false)]
        public int SeedResizeFromW { get; set; }

        /// <summary>
        /// Gets or Sets SamplerName
        /// </summary>
        [DataMember(Name = "sampler_name", EmitDefaultValue = false)]
        public string SamplerName { get; set; }

        /// <summary>
        /// Gets or Sets BatchSize
        /// </summary>
        [DataMember(Name = "batch_size", EmitDefaultValue = false)]
        public int BatchSize { get; set; }

        /// <summary>
        /// Gets or Sets NIter
        /// </summary>
        [DataMember(Name = "n_iter", EmitDefaultValue = false)]
        public int NIter { get; set; }

        /// <summary>
        /// Gets or Sets Steps
        /// </summary>
        [DataMember(Name = "steps", EmitDefaultValue = false)]
        public int Steps { get; set; }

        /// <summary>
        /// Gets or Sets CfgScale
        /// </summary>
        [DataMember(Name = "cfg_scale", EmitDefaultValue = false)]
        public decimal CfgScale { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public int Width { get; set; }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public int Height { get; set; }

        /// <summary>
        /// Gets or Sets RestoreFaces
        /// </summary>
        [DataMember(Name = "restore_faces", EmitDefaultValue = true)]
        public bool RestoreFaces { get; set; }

        /// <summary>
        /// Gets or Sets Tiling
        /// </summary>
        [DataMember(Name = "tiling", EmitDefaultValue = true)]
        public bool Tiling { get; set; }

        /// <summary>
        /// Gets or Sets DoNotSaveSamples
        /// </summary>
        [DataMember(Name = "do_not_save_samples", EmitDefaultValue = true)]
        public bool DoNotSaveSamples { get; set; }

        /// <summary>
        /// Gets or Sets DoNotSaveGrid
        /// </summary>
        [DataMember(Name = "do_not_save_grid", EmitDefaultValue = true)]
        public bool DoNotSaveGrid { get; set; }

        /// <summary>
        /// Gets or Sets Eta
        /// </summary>
        [DataMember(Name = "eta", EmitDefaultValue = false)]
        public decimal Eta { get; set; }

        /// <summary>
        /// Gets or Sets DenoisingStrength
        /// </summary>
        [DataMember(Name = "denoising_strength", EmitDefaultValue = false)]
        public decimal DenoisingStrength { get; set; }

        /// <summary>
        /// Gets or Sets SMinUncond
        /// </summary>
        [DataMember(Name = "s_min_uncond", EmitDefaultValue = false)]
        public decimal SMinUncond { get; set; }

        /// <summary>
        /// Gets or Sets SChurn
        /// </summary>
        [DataMember(Name = "s_churn", EmitDefaultValue = false)]
        public decimal SChurn { get; set; }

        /// <summary>
        /// Gets or Sets STmax
        /// </summary>
        [DataMember(Name = "s_tmax", EmitDefaultValue = false)]
        public decimal STmax { get; set; }

        /// <summary>
        /// Gets or Sets STmin
        /// </summary>
        [DataMember(Name = "s_tmin", EmitDefaultValue = false)]
        public decimal STmin { get; set; }

        /// <summary>
        /// Gets or Sets SNoise
        /// </summary>
        [DataMember(Name = "s_noise", EmitDefaultValue = false)]
        public decimal SNoise { get; set; }

        /// <summary>
        /// Gets or Sets OverrideSettings
        /// </summary>
        [DataMember(Name = "override_settings", EmitDefaultValue = false)]
        public Object OverrideSettings { get; set; }

        /// <summary>
        /// Gets or Sets OverrideSettingsRestoreAfterwards
        /// </summary>
        [DataMember(Name = "override_settings_restore_afterwards", EmitDefaultValue = true)]
        public bool OverrideSettingsRestoreAfterwards { get; set; }

        /// <summary>
        /// Gets or Sets RefinerCheckpoint
        /// </summary>
        [DataMember(Name = "refiner_checkpoint", EmitDefaultValue = false)]
        public string RefinerCheckpoint { get; set; }

        /// <summary>
        /// Gets or Sets RefinerSwitchAt
        /// </summary>
        [DataMember(Name = "refiner_switch_at", EmitDefaultValue = false)]
        public decimal RefinerSwitchAt { get; set; }

        /// <summary>
        /// Gets or Sets DisableExtraNetworks
        /// </summary>
        [DataMember(Name = "disable_extra_networks", EmitDefaultValue = true)]
        public bool DisableExtraNetworks { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name = "comments", EmitDefaultValue = false)]
        public Object Comments { get; set; }

        /// <summary>
        /// Gets or Sets EnableHr
        /// </summary>
        [DataMember(Name = "enable_hr", EmitDefaultValue = true)]
        public bool EnableHr { get; set; }

        /// <summary>
        /// Gets or Sets FirstphaseWidth
        /// </summary>
        [DataMember(Name = "firstphase_width", EmitDefaultValue = false)]
        public int FirstphaseWidth { get; set; }

        /// <summary>
        /// Gets or Sets FirstphaseHeight
        /// </summary>
        [DataMember(Name = "firstphase_height", EmitDefaultValue = false)]
        public int FirstphaseHeight { get; set; }

        /// <summary>
        /// Gets or Sets HrScale
        /// </summary>
        [DataMember(Name = "hr_scale", EmitDefaultValue = false)]
        public decimal HrScale { get; set; }

        /// <summary>
        /// Gets or Sets HrUpscaler
        /// </summary>
        [DataMember(Name = "hr_upscaler", EmitDefaultValue = false)]
        public string HrUpscaler { get; set; }

        /// <summary>
        /// Gets or Sets HrSecondPassSteps
        /// </summary>
        [DataMember(Name = "hr_second_pass_steps", EmitDefaultValue = false)]
        public int HrSecondPassSteps { get; set; }

        /// <summary>
        /// Gets or Sets HrResizeX
        /// </summary>
        [DataMember(Name = "hr_resize_x", EmitDefaultValue = false)]
        public int HrResizeX { get; set; }

        /// <summary>
        /// Gets or Sets HrResizeY
        /// </summary>
        [DataMember(Name = "hr_resize_y", EmitDefaultValue = false)]
        public int HrResizeY { get; set; }

        /// <summary>
        /// Gets or Sets HrCheckpointName
        /// </summary>
        [DataMember(Name = "hr_checkpoint_name", EmitDefaultValue = false)]
        public string HrCheckpointName { get; set; }

        /// <summary>
        /// Gets or Sets HrSamplerName
        /// </summary>
        [DataMember(Name = "hr_sampler_name", EmitDefaultValue = false)]
        public string HrSamplerName { get; set; }

        /// <summary>
        /// Gets or Sets HrPrompt
        /// </summary>
        [DataMember(Name = "hr_prompt", EmitDefaultValue = false)]
        public string HrPrompt { get; set; }

        /// <summary>
        /// Gets or Sets HrNegativePrompt
        /// </summary>
        [DataMember(Name = "hr_negative_prompt", EmitDefaultValue = false)]
        public string HrNegativePrompt { get; set; }

        /// <summary>
        /// Gets or Sets SamplerIndex
        /// </summary>
        [DataMember(Name = "sampler_index", EmitDefaultValue = false)]
        public string SamplerIndex { get; set; }

        /// <summary>
        /// Gets or Sets ScriptName
        /// </summary>
        [DataMember(Name = "script_name", EmitDefaultValue = false)]
        public string ScriptName { get; set; }

        /// <summary>
        /// Gets or Sets ScriptArgs
        /// </summary>
        [DataMember(Name = "script_args", EmitDefaultValue = false)]
        public List<Object> ScriptArgs { get; set; }

        /// <summary>
        /// Gets or Sets SendImages
        /// </summary>
        [DataMember(Name = "send_images", EmitDefaultValue = true)]
        public bool SendImages { get; set; }

        /// <summary>
        /// Gets or Sets SaveImages
        /// </summary>
        [DataMember(Name = "save_images", EmitDefaultValue = true)]
        public bool SaveImages { get; set; }

        /// <summary>
        /// Gets or Sets AlwaysonScripts
        /// </summary>
        [DataMember(Name = "alwayson_scripts", EmitDefaultValue = false)]
        public Object AlwaysonScripts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StableDiffusionProcessingTxt2Img {\n");
            sb.Append("  Prompt: ").Append(Prompt).Append("\n");
            sb.Append("  NegativePrompt: ").Append(NegativePrompt).Append("\n");
            sb.Append("  Styles: ").Append(Styles).Append("\n");
            sb.Append("  Seed: ").Append(Seed).Append("\n");
            sb.Append("  Subseed: ").Append(Subseed).Append("\n");
            sb.Append("  SubseedStrength: ").Append(SubseedStrength).Append("\n");
            sb.Append("  SeedResizeFromH: ").Append(SeedResizeFromH).Append("\n");
            sb.Append("  SeedResizeFromW: ").Append(SeedResizeFromW).Append("\n");
            sb.Append("  SamplerName: ").Append(SamplerName).Append("\n");
            sb.Append("  BatchSize: ").Append(BatchSize).Append("\n");
            sb.Append("  NIter: ").Append(NIter).Append("\n");
            sb.Append("  Steps: ").Append(Steps).Append("\n");
            sb.Append("  CfgScale: ").Append(CfgScale).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  RestoreFaces: ").Append(RestoreFaces).Append("\n");
            sb.Append("  Tiling: ").Append(Tiling).Append("\n");
            sb.Append("  DoNotSaveSamples: ").Append(DoNotSaveSamples).Append("\n");
            sb.Append("  DoNotSaveGrid: ").Append(DoNotSaveGrid).Append("\n");
            sb.Append("  Eta: ").Append(Eta).Append("\n");
            sb.Append("  DenoisingStrength: ").Append(DenoisingStrength).Append("\n");
            sb.Append("  SMinUncond: ").Append(SMinUncond).Append("\n");
            sb.Append("  SChurn: ").Append(SChurn).Append("\n");
            sb.Append("  STmax: ").Append(STmax).Append("\n");
            sb.Append("  STmin: ").Append(STmin).Append("\n");
            sb.Append("  SNoise: ").Append(SNoise).Append("\n");
            sb.Append("  OverrideSettings: ").Append(OverrideSettings).Append("\n");
            sb.Append("  OverrideSettingsRestoreAfterwards: ").Append(OverrideSettingsRestoreAfterwards).Append("\n");
            sb.Append("  RefinerCheckpoint: ").Append(RefinerCheckpoint).Append("\n");
            sb.Append("  RefinerSwitchAt: ").Append(RefinerSwitchAt).Append("\n");
            sb.Append("  DisableExtraNetworks: ").Append(DisableExtraNetworks).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  EnableHr: ").Append(EnableHr).Append("\n");
            sb.Append("  FirstphaseWidth: ").Append(FirstphaseWidth).Append("\n");
            sb.Append("  FirstphaseHeight: ").Append(FirstphaseHeight).Append("\n");
            sb.Append("  HrScale: ").Append(HrScale).Append("\n");
            sb.Append("  HrUpscaler: ").Append(HrUpscaler).Append("\n");
            sb.Append("  HrSecondPassSteps: ").Append(HrSecondPassSteps).Append("\n");
            sb.Append("  HrResizeX: ").Append(HrResizeX).Append("\n");
            sb.Append("  HrResizeY: ").Append(HrResizeY).Append("\n");
            sb.Append("  HrCheckpointName: ").Append(HrCheckpointName).Append("\n");
            sb.Append("  HrSamplerName: ").Append(HrSamplerName).Append("\n");
            sb.Append("  HrPrompt: ").Append(HrPrompt).Append("\n");
            sb.Append("  HrNegativePrompt: ").Append(HrNegativePrompt).Append("\n");
            sb.Append("  SamplerIndex: ").Append(SamplerIndex).Append("\n");
            sb.Append("  ScriptName: ").Append(ScriptName).Append("\n");
            sb.Append("  ScriptArgs: ").Append(ScriptArgs).Append("\n");
            sb.Append("  SendImages: ").Append(SendImages).Append("\n");
            sb.Append("  SaveImages: ").Append(SaveImages).Append("\n");
            sb.Append("  AlwaysonScripts: ").Append(AlwaysonScripts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
