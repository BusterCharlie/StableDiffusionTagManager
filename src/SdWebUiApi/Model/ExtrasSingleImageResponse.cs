/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SdWebUiApi.Client.OpenAPIDateConverter;

namespace SdWebUiApi.Model
{
    /// <summary>
    /// ExtrasSingleImageResponse
    /// </summary>
    [DataContract(Name = "ExtrasSingleImageResponse")]
    public partial class ExtrasSingleImageResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExtrasSingleImageResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ExtrasSingleImageResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ExtrasSingleImageResponse" /> class.
        /// </summary>
        /// <param name="htmlInfo">A series of HTML tags containing the process info. (required).</param>
        /// <param name="image">The generated image in base64 format..</param>
        public ExtrasSingleImageResponse(string htmlInfo = default(string), string image = default(string))
        {
            // to ensure "htmlInfo" is required (not null)
            if (htmlInfo == null)
            {
                throw new ArgumentNullException("htmlInfo is a required property for ExtrasSingleImageResponse and cannot be null");
            }
            this.HtmlInfo = htmlInfo;
            this.Image = image;
        }

        /// <summary>
        /// A series of HTML tags containing the process info.
        /// </summary>
        /// <value>A series of HTML tags containing the process info.</value>
        [DataMember(Name = "html_info", IsRequired = true, EmitDefaultValue = true)]
        public string HtmlInfo { get; set; }

        /// <summary>
        /// The generated image in base64 format.
        /// </summary>
        /// <value>The generated image in base64 format.</value>
        [DataMember(Name = "image", EmitDefaultValue = false)]
        public string Image { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExtrasSingleImageResponse {\n");
            sb.Append("  HtmlInfo: ").Append(HtmlInfo).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
